<?xml version="1.0" encoding="utf-8"?>
<Symbols LinesOfCode="47" PostSharpLinesOfCode="0" EnhancedTypesCount="3" SchemaVersion="1" PostSharpVersion="4.3.33.0" xmlns="http://schemas.postsharp.org/2.0/symbols">
  <Class Class="#1=T:[Logger.Data]Logger.Data.TransactionAttribute">
    <Instance Declaration="#2=M:[Logger.Service]Logger.Service.LogExceptionService::Save(Logger.Domain.LogException, Logger.Domain.ExceptionInfo)" Id="7240b4ac0bbd5299">
      <Target>
        <JoinPoint Advising="#1" Description="#3=Wrapped by advice(s) OnEntry, OnSuccess, OnException" Ordinal="0" />
      </Target>
    </Instance>
    <Instance Declaration="#4=M:[Logger.Service]Logger.Service.LogRequestService::SaveAll(Logger.Domain.LogRequest, Logger.Domain.RequestInfo, Logger.Domain.HostInfo)" Id="7240b4ac85027bb7">
      <Target>
        <JoinPoint Advising="#1" Description="#3" />
      </Target>
    </Instance>
    <Instance Declaration="#5=M:[Logger.Service]Logger.Service.LogOperationService::Save(Logger.Domain.OperationInfo, Logger.Domain.LogOperation)" Id="7240b4acc90f037c">
      <Target>
        <JoinPoint Advising="#1" Description="#3" Ordinal="2" />
      </Target>
    </Instance>
  </Class>
  <Annotation Target="#6=M:[Logger.Data]Logger.Data.TransactionAttribute::OnEntry(PostSharp.Aspects.MethodExecutionArgs)" Arguments="#7=2" Description="#8=PostSharp estimates that 2 line(s) of code are saved every time this advice is applied. Use the [LinesOfCodeAvoided] attribute on the aspect or specify the LinesOfCodeAvoided property on the advice attribute to override this value." />
  <Annotation Target="#9=M:[Logger.Data]Logger.Data.TransactionAttribute::OnSuccess(PostSharp.Aspects.MethodExecutionArgs)" Arguments="#7" Description="#8" />
  <Annotation Target="#10=M:[Logger.Data]Logger.Data.TransactionAttribute::OnException(PostSharp.Aspects.MethodExecutionArgs)" Arguments="#7" Description="#8" />
</Symbols>